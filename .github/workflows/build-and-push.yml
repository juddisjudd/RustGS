name: Build and Push Docker Image

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build even if no changes'
        required: false
        default: 'false'
        type: boolean

env:
  REGISTRY: docker.io
  IMAGE_NAME: rustgs

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/ipajudd/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=schedule,pattern={{date 'YYYYMMDD'}}
        labels: |
          org.opencontainers.image.title=RustGS
          org.opencontainers.image.description=Docker image for Rust dedicated server with Oxide/Carbon mod support
          org.opencontainers.image.vendor=juddisjudd
          org.opencontainers.image.source=https://github.com/juddisjudd/RustGS

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test image
      if: github.event_name == 'pull_request'
      run: |
        docker run --rm -d --name rust-server-test ${{ steps.meta.outputs.tags }}
        sleep 30
        if docker ps | grep -q rust-server-test; then
          echo "✅ Container test passed"
          docker stop rust-server-test
        else
          echo "❌ Container test failed"
          docker logs rust-server-test
          exit 1
        fi

    - name: Update Docker Hub description
      if: github.ref == 'refs/heads/main'
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: ipajudd/${{ env.IMAGE_NAME }}
        readme-filepath: ./README.md

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2
      with:
        generate_release_notes: true
        files: |
          docker-compose.yml
          unraid/rust-game-server.xml